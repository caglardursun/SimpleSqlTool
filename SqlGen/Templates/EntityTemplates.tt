<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Xml" #>
<#@ import namespace="SqlGen" #>
<#@ parameter name="_namespace" type="System.String" #>
<#@ parameter name="tableName" type="System.String" #>
<#@ parameter name="schemaName" type="System.String" #>
<#@ parameter name="options" type="SqlGen.GeneratorOptions" #>
<#@ parameter name="table" type="SqlGen.Table" #>
<#@ parameter name="columns" type="System.Collections.Generic.IEnumerable<Column>" #>
<#@ parameter name="foregnkeys" type="System.Collections.Generic.List<FkModel>" #>
using Sbu.Ubys.Core.Entities;
using Sbu.Ubys.Core.Entities.Base;
using System;
using System.ComponentModel.DataAnnotations.Schema;

namespace <#=_namespace#>.Data.Entity
{
    <#
    Write($"[Table(\"{tableName}\", Schema = \"{table.Schema}\")]\n");
    #>
    public class <#=tableName#> : UpdateEntity, IEntity
    {
    <#
        foreach (var c in columns)
        {
                var propName = c.ColumnName;
                var propType = c.ClrTypeName();
                if(!propName.Equals("Id")){
                    Write("\t");Write($@"public {propType} {propName} {{ get; set; }}");Write("\n");
                }
                
        }        
    #>
    }

}
